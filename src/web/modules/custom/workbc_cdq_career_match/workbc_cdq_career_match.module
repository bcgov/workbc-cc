<?php

use Drupal\Core\Form\FormStateInterface;

function workbc_cdq_career_match_preprocess_views_view_field(&$variables) {

  if ($variables['view']->id() === "quiz_career_match" && $variables['field']->realField === "career_match") {
    $value = $variables['field']->getValue($variables['row']);
    $output = $variables['field']->advancedRender($variables['row']);
    $output = str_replace($value, round($value, 0), $output);
    $variables['output'] = $output;
  }
}

/**
 * Implements hook_webform_third_party_settings_form_alter().
 */
function workbc_cdq_career_match_webform_third_party_settings_form_alter(array &$form, FormStateInterface $form_state) {
  /** @var \Drupal\webform\WebformInterface $webform */
  $webform = $form_state->getFormObject()->getEntity();

  // Ignore for non-quiz webforms.
  if (!str_contains($webform->id(), '_quiz')) return;

  $form['third_party_settings']['workbc_cdq_career_match'] = [
    '#type' => 'details',
    '#title' => t('WorkBC CDQ settings'),
    '#open' => TRUE,
  ];
  $vocabularies = \Drupal::entityTypeManager()->getStorage('taxonomy_vocabulary')->loadMultiple();
  $form['third_party_settings']['workbc_cdq_career_match']['categories'] = [
    '#type' => 'select',
    '#title' => t('Quiz categories'),
    '#description' => t('The categories that apply to the questions of this quiz.'),
    '#required' => true,
    '#default_value' => $webform->getThirdPartySetting('workbc_cdq_career_match', 'categories'),
    '#options' => array_reduce(array_keys($vocabularies), function($options, $key) use($vocabularies) {
      if (str_contains($key, 'categories')) {
        $options[$key] = $vocabularies[$key]->get('name');
      }
      return $options;
    }, [])
  ];
}

/**
 * Implements hook_webform_element_default_properties_alter().
 */
function workbc_cdq_career_match_webform_element_default_properties_alter(array &$properties, array &$definition) {
  // Add custom data property to all webform elements.
  // Setting the custom property to an empty string makes the corresponding
  // element defined via hook_webform_element_configuration_form_alter()
  // automatically visible.
  $properties['category'] = '';
}

/**
 * Implements hook_webform_element_translatable_properties_alter().
 */
function workbc_cdq_career_match_webform_element_translatable_properties_alter(array &$properties, array &$definition) {
  // Make the custom data property translatable.
  $properties[] = 'category';
}

/**
 * Implements hook_webform_element_configuration_form_alter().
 */
function workbc_cdq_career_match_webform_element_configuration_form_alter(&$form, FormStateInterface $form_state) {
  // If you want add element properties to specific element type, you can use
  // the below code to the current element's type and more.
  /** @var Drupal\webform_ui\Form\WebformUiElementEditForm $form_object */
  $form_object = $form_state->getFormObject();
  $element_plugin = $form_object->getWebformElementPlugin();
  $element_label = $element_plugin->getPluginLabel();
  $element_type = $element_plugin->getTypeName();
  $webform = $element_plugin->getWebform();
  $settings = $webform->get('third_party_settings');

  // Ignore other than radios elements.
  if ($element_type !== 'radios') return;

  // Append custom properties details container and textfield element.
  $t_args = [
    '@label' => $element_label,
    '@type' => $element_type,
  ];
  $form['workbc_cdq_career_match'] = [
    '#type' => 'details',
    '#title' => t('WorkBC CDQ properties'),
    '#description' => t('Properties related to WorkBC CDQ.'),
    '#open' => TRUE,
    // Add custom properties after all fieldset elements, which have a
    // weight of -20.
    // @see \Drupal\webform\Plugin\WebformElementBase::buildConfigurationForm
    '#weight' => -10,
  ];
  $form['workbc_cdq_career_match']['category'] = [
    '#type' => 'select',
    '#title' => t('Question category'),
    '#description' => t('The category to which this question belongs.', $t_args),
    '#required' => true,
    '#options' => array_reduce(\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($settings['workbc_cdq_career_match']['categories']), function($options, $term) {
      $options[$term->name] = $term->name;
      return $options;
    })
  ];
}
