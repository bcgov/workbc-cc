<?php

use Drupal\webform\Entity\WebformSubmission;

function quizzesList() {
  $forms = \Drupal::entityTypeManager()->getStorage('webform')->loadMultiple();
  return array_reduce($forms, function($quizzes, $form) {
    if (str_ends_with($form->id(), '_quiz')) {
      $quizzes[$form->id()] = $form->get('title');
    }
    return $quizzes;
  }, []);
}

function quizzesInfo() {
  $info = [];

  $info['abilities_quiz'] = array(
    'description' => 'Assess your talents and discover occupations that match.',
    'time' => 10,
    'questions' => 39,
  );
  $info['work_preferences_quiz'] = array(
    'description' => 'Identify how you like to work and find careers that align with your preferences.',
    'time' => 10,
    'questions' => 50,
  );
  $info['interests_quiz'] = array(
    'description' => 'See where your interests are and narrow your focus to careers that fit.',
    'time' => 10,
    'questions' => 60,
  );
  $info['multiple_intelligences_quiz'] = array(
    'description' => 'Discover your unique way of thinking and understanding.',
    'time' => 10,
    'questions' => 64,
  );
  $info['learning_styles_quiz'] = array(
    'description' => 'Determine whether you learn better by seeing, listening or doing.',
    'time' => 5,
    'questions' => 24,
  );
  $info['work_values_quiz'] = array(
    'description' => 'Examine what values are important to you in your work environment.',
    'time' => 10,
    'questions' => 33,
  );          

}
function getSubmissionOverrides($webform_id) {
  // Check whether current user has permission to override answers.
  if (!\Drupal::currentUser()->hasPermission('override quiz answers')) {
    \Drupal::messenger()->addError(t(
      'Current user cannot override quiz answers. Ignoring.'
    ));
    return false;
  }

  /** @var \Drupal\webform\WebformInterface $quiz */
  $quiz = \Drupal::entityTypeManager()->getStorage('webform')->load($webform_id);

  // Inject answers from URL query if found.
  $answers_override = \Drupal::request()->get('answers');
  if (empty($answers_override)) {
    return false;
  }

  // Check override length;
  $questions = array_filter($quiz->getElementsInitializedAndFlattened(), function($question) {
    return $question['#type'] === 'radios';
  });
  if (strlen($answers_override) != count($questions)) {
    \Drupal::messenger()->addError(t(
      'Answers override has wrong length @len, expecting @exp. Ignoring.',
      ['@len' => strlen($answers_override), '@exp' => count($questions)]
    ));
    return false;
  }

  // Populate answers, checking option validity.
  $submission = [];
  $answers = [];
  foreach (array_keys($questions) as $i => $k) {
    $answer_index = intval($answers_override[$i]);
    if ($answer_index > count($questions[$k]['#options'])) {
      \Drupal::messenger()->addError(t(
        'Answer for question @question has invalid value @value, expecting 0-@max. Ignoring.',
        ['@question' => $i, '@value' => $answer_index, '@max' => count($questions[$k]['#options'])-1]
      ));
      return false;
    }
    $options_keys = array_keys($questions[$k]['#options']);
    $submission[$k] = strval($options_keys[$answer_index]);
    $answers[$k] = $questions[$k]['#options'][$options_keys[$answer_index]];
  }
  \Drupal::messenger()->addMessage(t(
    'Answers override in effect:<br><pre>@answers</pre>', ['@answers' => print_r($answers, true)]
  ));
  return $submission;
}

function getUserSubmission($webform_id) {
  $override = getSubmissionOverrides($webform_id);
  if ($override) {
    $submission = WebformSubmission::create([
      'webform_id' => $webform_id,
      'data' => $override,
      'notes' => 'Created by overridden answers.'
    ]);
    $submission->save();

    if ($submission->id()) {
      $older_sids = \Drupal::entityQuery('webform_submission')
      ->condition('webform_id', $webform_id)
      ->condition('sid', $submission->id(), '<>')
      ->accessCheck(false)
      ->execute();
      \Drupal::entityTypeManager()->getStorage('webform_submission')->delete(
        \Drupal::entityTypeManager()->getStorage('webform_submission')->loadMultiple(array_keys($older_sids))
      );
    }

    return $submission;
  }

  $current_user = \Drupal::currentUser();
  $query = \Drupal::entityQuery('webform_submission')
  ->condition('uid', $current_user->id())
  ->condition('webform_id', $webform_id)
  ->range(0, 1)
  ->sort('changed', 'DESC')
  ->accessCheck(false);

  $results = $query->execute();
  if ($results) {
    $sid = array_shift($results);
    $submission = WebformSubmission::load($sid);
  }

  return isset($submission) ? $submission : false;
}
