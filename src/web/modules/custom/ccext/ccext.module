<?php

use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_entity_type_build().
 *
 * @param EntityTypeInterface[] $entity_types
 */
function ccext_entity_type_build(array &$entity_types) {
  if (isset($entity_types['entity_comparison'])) {
    $entity_types['entity_comparison']->setClass('Drupal\ccext\Entity\CcextEntityComparison');
  }
}


/**
 * Implements hook_theme().
 */
function ccext_theme($existing, $type, $theme, $path) {
  return [
    'career_profile_comparison' => [
      'variables' => [
        'id' => NULL,
        'rows' => NULL,
        '#empty' => NULL
      ],
    ],
  ];
}

/**
 * Implements hook_views_query_alter().
 */
function ccext_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if ($view->id() == 'career_matches' && 'block_1' == $view->current_display) {
    $title = NULL;
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node instanceof \Drupal\node\NodeInterface) {
      // You can get nid and anything else you need from the node object.
      $nid = $node->id();
      $session = \Drupal::request()->getSession();
      $save_quiz = $session->get('SavedQuiz');
      $quiz_result = $save_quiz['save_quiz_' . $node->bundle() . "_$nid"];
      if (!empty($save_quiz) && isset($quiz_result) && !empty($quiz_result->result)) {
        foreach ($quiz_result->result as $key => $value) {
          $title[] = $key;
        }
      }
    }
    $query->addWhere('0', 'node_field_data.title', $title, 'IN');
  }
}
