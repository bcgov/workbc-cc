<?php

/**
 * @file
 * Work BC Quiz module to create Double Reference field .
 */

use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * Use Drupal\Core\Url;
 * use Drupal\Component\Utility\Html;.
 */
function work_bc_quiz_page_attachments_alter(array &$attachments) {
  $attachments['#attached']['library'][] = 'work_bc_quiz/work-bc-lib';
}

/**
 *
 */
function work_bc_quiz_theme($existing, $type, $theme, $path) {
  return [
    'node__quiz' => [
      'template' => 'node--quiz',
      'base hook' => 'node',
    ],
    'node__abilities_quiz__full' => [
      'template' => 'node--quiz--full',
      'base hook' => 'node',
    ],
    'views_view__career_quizzes__page_1' => [
      'template' => 'views-view--career-quizzes--page-1',
      'base hook' => 'view',
    ],
    'views_bootstrap_grid' => [
      'template' => 'views-bootstrap-grid--career-quizzes-block-1',
      'base hook' => 'view',
    ],
    'views_bootstrap_grid__career_quizzes' => [
      'template' => 'views-bootstrap-grid--career-quizzes-block-1',
      'base hook' => 'views',
    ],
    'node_edit_form' => [
      'render element' => 'form',
      'template' => 'node_edit_form',
      'base hook' => 'node_edit_form',
    ],
  ];
}

/**
 * Add title default value in title intput box.
 */
function work_bc_quiz_form_node_form_alter(&$form, $formState, $form_id) {
  $nodeTypeToHideTitle = ["multiple_intelligence_quiz", "multiple_intelligence_quiz_step_1", "abilities_quiz", "abilities_quiz_step_1"];
  $form_id = str_replace(["node_", "_form", "_step_1"], [''], $form_id);
  if (in_array($form_id, $nodeTypeToHideTitle)) {
    $form['title']['widget'][0]['value']['#value'] = ucwords(str_replace("_", " ", $form_id));
    $form['title']['widget'][0]['#attributes']['class'] = ['wrapper-class'];
    unset($form['preview']);
    // \Drupal::messenger()->addMessage(t('You\'re creating a Basic Quiz node.'), 'info');
  }
}

/**
 * Set default value of title before saving node.
 */
function work_bc_quiz_entity_presave(EntityInterface $entity) {
  switch ($entity->bundle()) {
    case 'multiple_intelligence_quiz':
      // Setting the title with the value of field_date.
      $autoTitle = ucwords(str_replace("_", " ", $entity->bundle())) . " - Results";
      $entity->setTitle($autoTitle);
      break;

    case 'abilities_quiz':
      // Setting the title with the value of field_date.
      $autoTitle = ucwords(str_replace("_", " ", $entity->bundle())) . " - Results";
      $entity->setTitle($autoTitle);
      break;
  }
}

/**
 *
 */
function work_bc_quiz_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {

  $node = $entity;
  if ($node->bundle() === 'multiple_intelligence_quiz' || $node->bundle() === 'abilities_quiz') {
    if ($view_mode === 'full' || $view_mode === 'quiz') {
      // var_dump($node->getFieldDefinitions());
      // $fields = \Drupal::entityManager()->getFieldDefinitions('node', 'article');.
      $fields = \Drupal::service('entity_field.manager')->getFieldDefinitions('node', $node->bundle());
      $bundleFields = [];

      $groupedResult = [];
      foreach ($fields as $field_name => $field_definition) {
        if (!empty($field_definition->getTargetBundle())) {
          if ($field_definition->getType() == "work_bc_quiz") {
            $answer = $node->get($field_name)->getValue();

            if ($answer[0]['ar_target_id']) {

            }
            else {
              $answer[0]['ar_target_id'] = 10;
            }
            if ($answer[0]['target_id']) {
              // print_r($answer[0]['target_id']);
              // echo "<br/>";.
            }
            else {
              // die;.
              $answer[0]['target_id'] = 4;
            }
            $options_weight = Term::load($answer[0]['ar_target_id'])->get('field_weightage')->value;
            $category_name = Term::load($answer[0]['target_id'])->get('name')->value;
            $category_weight = Term::load($answer[0]['target_id'])->get('field_weightage')->value;
            $category_svg = Term::load($answer[0]['target_id'])->get('field_svg_icon')->entity->uri->value;

            $category_description = Term::load($answer[0]['target_id'])->get('description')->value;

            if (array_key_exists($category_name, $groupedResult)) {
              array_push($groupedResult[$category_name]['score'], $options_weight);
            }
            else {
              $groupedResult[$category_name]['score'] = [$options_weight];
              $groupedResult[$category_name]['name'] = $category_name;
              $groupedResult[$category_name]['weight'] = $category_weight;
              $groupedResult[$category_name]['icon'] = $category_svg;
              $groupedResult[$category_name]['description'] = $category_description;
            }
            if ($entity_type_id) {
              $bundleFields[$entity_type_id][$field_name]['type'] = $field_definition->getType();
              $bundleFields[$entity_type_id][$field_name]['label'] = $field_definition->getLabel();

              $bundleFields[$entity_type_id][$field_name]['answer']['target_id'] = $answer[0]['target_id'];
              $bundleFields[$entity_type_id][$field_name]['answer']['target_name'] = Term::load($answer[0]['target_id'])->get('name')->value;
              $bundleFields[$entity_type_id][$field_name]['answer']['ar_target_id'] = $answer[0]['ar_target_id'];
              $bundleFields[$entity_type_id][$field_name]['answer']['ar_target_name'] = ($answer[0]['ar_target_id']) ? Term::load($answer[0]['ar_target_id'])->get('name')->value : '';
              $bundleFields[$entity_type_id][$field_name]['answer']['field_weightage'] = ($answer[0]['ar_target_id']) ? Term::load($answer[0]['ar_target_id'])->get('field_weightage')->value : '';
            }
          }
        }
      }
      // print_r($groupedResult);
      $bundleFields = $bundleFields[''];

      $build['an_additional_field']['#quiz_result'] = $groupedResult;
      // $build['body'][0]['#text'] = 'this is a new altered content body ';
      // $build['title'][0]['#context']['value'] = 'Test';
      // $build['quiz_result'] = ['Test'];
      /* $someText="  ";
      $build['tradesteps_markup'] = array(
      '#markup' => $someText,
      '#prefix' => '<div class="addition-text-markup">Top Wrapper Markup...',
      '#suffix' => '</div>'
      );
      $build['tradesteps_container'] = array(
      '#type' => 'container',
      '#prefix' => '<div class="addition-text-container">Top Wrapper Container...',
      '#suffix' => '</div>'
      ); */
      // dump($build['title'][0]['#context']['value']);
      // print_r($bundleFields);
      // return $build;.
    }
    elseif ($view_mode === 'default') {
      // Print "Test2";
      // die;.
    }
  }
}

/**
 *
 */
function work_bc_quiz_node_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if (isset($build['_title'])) {

    $field_group = $build['#group_children']['title'];
    $build['#group_children']['_title'] = $field_group;
    $build['#fieldgroups'][$field_group]->children[] = '_title';
  }
}
