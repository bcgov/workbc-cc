<?php

/**
 * @file
 * BC gov career theme file.
 */

use Drupal\Core\Url;
use Drupal\file\Entity\File;
use Drupal\node\NodeInterface;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_page().
 */
function bcgov_career_preprocess_page(&$variables) {
  $query_step = \Drupal::request()->query->get('step');
  if ($query_step) {
    $variables['current_step'] = Html::cleanCssIdentifier($query_step);
  }
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof NodeInterface) {
    $variables['page_bundle'] = $node->bundle();
    $variables['quiz_color'] = _quiz_color_type($node->bundle());
  }
  else {
    $current_path = \Drupal::service('path.current')->getPath();
    $arg = explode('/', $current_path);
    if (isset($arg[1]) && isset($arg[2])  && $arg[1] == 'quiz') {
      $quiz_type = str_replace('-', '_', $arg[2]);
      $variables['quiz_color'] = _quiz_color_type($quiz_type);
      $variables['page_bundle'] = $quiz_type;
    }
  }
}

/**
 * Implements hook_preprocess_views_view_table().
 */
function bcgov_career_preprocess_views_view_table(&$variables) {
  $view = $variables['view'];
  if ($view->id() == 'career_matches' && $view->current_display == 'block_1') {
    $result = $variables['result'] = $variables['rows'];
    // dd($result);
    $fields =& $view->field;
    $handler = $view->style_plugin;
    $match = NULL;
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node instanceof NodeInterface) {
      // You can get nid and anything else you need from the node object.
      $nid = $node->id();
      $session = \Drupal::request()->getSession();
      $save_quiz = $session->get('SavedQuiz');
      $quiz_result = $save_quiz['save_quiz_' . $node->bundle() . "_$nid"];
      if (!empty($save_quiz) && isset($quiz_result) && !empty($quiz_result->result)) {
        $match = $quiz_result->result;
      }
    }

    // Render each field into its appropriate column.
    foreach ($result as $num => $row) {
      $raw = NULL;
      $raw['match'] = $match[$handler->getFieldValue($num, 'title')] . '%';

      foreach ($fields as $key => $value) {
        $raw[$key] = $handler->getFieldValue($num, $key);
        switch ($key) {

          case 'field_job_summary':
            $raw[$key] = $handler->getField($num, $key);

            break;
        }
        if ($key == 'field_image' && $handler->getFieldValue($num, $key)) {
          $image_file = File::load($handler->getFieldValue($num, $key));
          $uri = $image_file->uri->value;
          $variables['url'] = file_create_url($uri);
          $raw['field_image'] = (file_create_url($uri));
        }

      }
      $result[$num]['title'] = $handler->getFieldValue($num, 'title');
      $result[$num]['raw'] = $raw;
    }

    $query_col_edu = '';
    $query_col_sal = '';
    $query_order = '';

    $query_order = \Drupal::request()->query->get('order');
    $query_col= \Drupal::request()->query->get('sort');

    if($query_order == null && $query_col == null) {
      //Result order sort by quiz result.
      $resut_order = NULL;
      foreach ($match as $title => $per) {
        foreach ($result as $num => $row) {
          if ($row['title'] == $title) {
            $resut_order[] = $row;
            break;
          }
        }
      }
      $variables['result'] = $variables['rows'] = $resut_order;
    } else {
      $variables['result'] = $variables['rows'] = $result;
    }

    $variables['current_nid'] = $nid;
    // Get the url object from route.
    $url = Url::fromRoute('ccext.compate_action_remove', [
      'node_id' => $nid,
    ], [
      'query' => \Drupal::service('redirect.destination')->getAsArray(),
    ]);
    $variables['remove_url'] = $url->toString();
  }
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function bcgov_career_theme_suggestions_table_alter(array &$suggestions, array $variables, $hook) {
  if ($variables['attributes']['id'] == 'career_profile-node-comparison-table') {
    $suggestions[] = $hook . '__' . 'career_profile_comparison_table';
  }
}

/**
 * Function to get color value from current bundle.
 */
function _quiz_color_type($bundle) {
  $query = \Drupal::entityQuery('node')
    ->condition('type', 'quiz_list')
    ->condition('field_quiz_content_type', $bundle);
  $results = $query->execute();
  $quiz_color = NULL;
  if (!empty($results)) {
    $storage = \Drupal::entityTypeManager()->getStorage('node');
    $quiz_node = $storage->load(reset($results));
    $quiz_color_value = $quiz_node->get('field_quiz_color_selection')->value;
    $quiz_color = Html::cleanCssIdentifier('quiz-color-' . $quiz_color_value);
  }
  return $quiz_color;
}
